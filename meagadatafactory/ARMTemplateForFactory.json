{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "meagadatafactory"
		},
		"AzureBlobStorageSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageSource'"
		},
		"AzureSynapseAnalyticsDestination_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSynapseAnalyticsDestination'"
		},
		"AzureSynapseAnalyticsDestination_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "megasqldwserver.database.windows.net"
		},
		"AzureSynapseAnalyticsDestination_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "MegaSQLDW"
		},
		"AzureSynapseAnalyticsDestination_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqldwadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FirstPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "First Pipeline - Blob to Synapse copy data. ",
				"activities": [
					{
						"name": "Copy data",
						"description": "Copy data from Blob to DataWareHouse(Synapse)",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorageSource",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Post_id",
											"type": "Int64"
										},
										"sink": {
											"name": "Postid",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Post_Type",
											"type": "String"
										},
										"sink": {
											"name": "PostType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "Int64"
										},
										"sink": {
											"name": "comments",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "likes",
											"type": "Int64"
										},
										"sink": {
											"name": "likes",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDelimitedTextFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationAzureSynapseAnalyticsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDelimitedTextFile')]",
				"[concat(variables('factoryId'), '/datasets/DestinationAzureSynapseAnalyticsTable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationAzureSynapseAnalyticsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Destination - Azure Synapse Analytics Table",
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalyticsDestination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Postid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostType",
						"type": "varchar"
					},
					{
						"name": "comments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "likes",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "housepost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDelimitedTextFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Source Delimited Text File",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "posts.csv",
						"folderPath": "houselist",
						"container": "megasales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Post_id",
						"type": "String"
					},
					{
						"name": "Post_Type",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					},
					{
						"name": "likes",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AzureBlobStorage - Data Source",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageSource_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsDestination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Synapse Analytics - Data Destination",
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AzureSynapseAnalyticsDestination_properties_typeProperties_server')]",
					"database": "[parameters('AzureSynapseAnalyticsDestination_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSynapseAnalyticsDestination_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSynapseAnalyticsDestination_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CopyData Trigger",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FirstPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-07-25T16:24:00",
						"endTime": "2025-07-26T16:24:00",
						"timeZone": "Pacific Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FirstPipeline')]"
			]
		}
	]
}